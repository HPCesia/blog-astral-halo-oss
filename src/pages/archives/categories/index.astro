---
import type { BlogPostData } from '@/types/data';
import {
  getCategories,
  getCategoryUrl,
  getSortedPosts,
  getTagUrl,
} from '@/utils/content-utils';
import ProfileCard from '@components/aside/ProfileCard.astro';
import TOC from '@components/aside/TOC.astro';
import Button from '@components/widgets/Button.astro';
import MetaIcon from '@components/widgets/MetaIcon.astro';
import MainLayout from '@layouts/MainLayout.astro';
import { t } from '@utils/i18n';
import { Icon } from 'astro-icon/components';

const categoriesMap = await getCategories();
const allPosts = await getSortedPosts();

const categoryPosts = new Map<string, { body: string; data: BlogPostData }[]>();
for (const [category] of categoriesMap) {
  const posts = allPosts.filter((post) => post.data.category === category).slice(0, 3);
  categoryPosts.set(category, posts);
}
const uncategorizedPosts = allPosts.filter((post) => !post.data.category).slice(0, 3);
if (uncategorizedPosts.length > 0)
  categoryPosts.set(t.meta.unCategorized(), uncategorizedPosts);
---

<MainLayout title={t.navigation.archive.categories()}>
  <div
    class="card bg-base-200 border-base-300 swup-transition-fade mx-auto flex flex-col items-center border px-6 py-4"
  >
    <div class="tooltip md:tooltip-right tooltip-bottom mx-auto w-fit">
      <h1 class="text-center text-3xl font-bold">{t.navigation.archive.categories()}</h1>
      <div class="tooltip-content flex flex-col">
        <div>
          {t.status.postsCount(allPosts.length) + ', '}
        </div>
        <div>
          {t.status.categoriesCount(categoriesMap.size)}
        </div>
      </div>
    </div>
    <ul
      class="timeline timeline-snap-icon timeline-vertical max-md:timeline-compact w-full p-4"
    >
      {
        Array.from(categoryPosts.entries()).map(([category, posts], index) => (
          <li>
            {index > 0 && <hr />}
            <div class="timeline-middle">
              <Icon
                name="material-symbols:add-circle-rounded"
                height="1.25rem"
                width="1.25rem"
              />
            </div>
            <div class:list={[`timeline-${index % 2 === 0 ? 'start' : 'end'}`, 'w-full']}>
              <div
                class:list={[
                  index % 2 === 0 && 'md:flex-row-reverse',
                  'mx-4 flex flex-row items-center justify-between',
                ]}
              >
                <h2 class="scroll-mt-20 text-2xl font-bold" id={`heading-${category}`}>
                  {category}
                  <span class="text-base-content/60 ml-2 text-base">
                    ({categoriesMap.get(category) || 0})
                  </span>
                </h2>
                <Button href={getCategoryUrl(category)} title={category} class="pl-3">
                  {t.button.more()}
                  <Icon
                    name="material-symbols:chevron-right-rounded"
                    height="1.5rem"
                    width="1.5rem"
                  />
                </Button>
              </div>
              <ul class="list">
                {posts.map(({ data }) => (
                  <li class="list-row">
                    <div class="list-col-grow">
                      <a
                        href={`/posts/${data.slug}`}
                        title={data.title}
                        class="text-lg font-bold"
                      >
                        {data.title}
                      </a>
                      <div class="text-base-content/60 mt-2 flex flex-wrap items-start gap-x-4 gap-y-2 text-sm">
                        {[
                          {
                            icon: 'material-symbols:category-outline-rounded',
                            text: data.category || t.meta.unCategorized(),
                            link: getCategoryUrl(data.category),
                          },
                          ...(data.tags?.map((tag) => {
                            return {
                              icon: 'material-symbols:tag-rounded',
                              text: tag,
                              link: getTagUrl(tag),
                            };
                          }) || []),
                        ].map((meta) => (
                          <div class="flex items-center gap-0">
                            <MetaIcon name={meta.icon} />
                            {meta.link ? (
                              <a href={meta.link} class="meta-text" title={meta.text}>
                                {meta.text}
                              </a>
                            ) : (
                              <span class="meta-text">{meta.text}</span>
                            )}
                          </div>
                        ))}
                      </div>
                    </div>
                  </li>
                ))}
              </ul>
            </div>
            <hr />
          </li>
        ))
      }
    </ul>
  </div>
  <Fragment slot="aside-fixed">
    <ProfileCard />
  </Fragment>
  <Fragment slot="aside-sticky">
    <TOC
      headings={Array.from(categoriesMap.keys()).map((category) => ({
        text: category,
        slug: `heading-${category}`,
        depth: 2,
      }))}
    />
  </Fragment>
</MainLayout>
