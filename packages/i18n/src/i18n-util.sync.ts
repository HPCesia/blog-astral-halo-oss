// This file was auto-generated by 'typesafe-i18n'. Any manual changes will be overwritten.
/* eslint-disable */

import { initFormatters } from './formatters.js'
import type { Locales, Translations } from './i18n-types.js'
import { loadedFormatters, loadedLocales, locales } from './i18n-util.js'

import en from './en/index.js'
import zh_CN from './zh-CN/index.js'
import zh_TW from './zh-TW/index.js'

import en_cli from './en/cli/index.js'
import en_web from './en/web/index.js'
import zh_CN_cli from './zh-CN/cli/index.js'
import zh_CN_web from './zh-CN/web/index.js'
import zh_TW_cli from './zh-TW/cli/index.js'
import zh_TW_web from './zh-TW/web/index.js'

const localeTranslations = {
	en: {
		...en,
		cli: en_cli,
		web: en_web
	},
	'zh-CN': {
		...zh_CN,
		cli: zh_CN_cli,
		web: zh_CN_web
	},
	'zh-TW': {
		...zh_TW,
		cli: zh_TW_cli,
		web: zh_TW_web
	},
}

export const loadLocale = (locale: Locales): void => {
	if (loadedLocales[locale]) return

	loadedLocales[locale] = localeTranslations[locale] as unknown as Translations
	loadFormatters(locale)
}

export const loadAllLocales = (): void => locales.forEach(loadLocale)

export const loadFormatters = (locale: Locales): void =>
	void (loadedFormatters[locale] = initFormatters(locale))
